[/=============================================================================
    Copyright (C) 2013-2015 Cromwell D. Enage

    Distributed under the Boost Software License, Version 1.0.
    (See accompanying file LICENSE_1_0.txt or copy at
    [@http://www.boost.org/LICENSE_1_0.txt])
=============================================================================/]

[section:has_base `has_base`]

[section Synopsis]
[reference__has_base]
[endsect]

[section Description]
This metafunction evaluates to `ResultIfNoBase` if the type `T` is *not*
defined with a zero-argument `base` member function definition.  Otherwise,
this metafunction evaluates to the same type that `ResultPlaceholderExpr` will
evaluate to __mpl_true__ when passed in the result type of the `base` member
function as its argument type.
[endsect]

[section:type_requirements Type requirements]
The type `ResultPlaceholderExpr` must be an __MPL_Lambda_Expression__ that can
take in the result type of the `base` member function as its argument type, and
evaluate to a type for which __dst_is_mpl_boolean_constant__ evaluates to
__mpl_true__.

The type `ResultIfNoBase` must be a type for which
__dst_is_mpl_boolean_constant__ evaluates to __mpl_true__.
[endsect]

[section:definition Where defined]
``
#include <__has_base__header__>
``

--or--

``
#include <__ds_traits__header__>
``

Forward declaration:

``
#include <__ds_traits_fwd__header__>
``
[endsect]

[endsect] [/ has_base]

