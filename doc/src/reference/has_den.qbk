[/============================================================================
    Copyright (C) 2013-2018 Cromwell D. Enage

    Distributed under the Boost Software License, Version 1.0.
    (See accompanying file LICENSE_1_0.txt or copy at
    [@http://www.boost.org/LICENSE_1_0.txt])
============================================================================/]

[section:has_den `has_den`]

[section Synopsis]
[reference__has_den]
[endsect]

[section Description]
This metafunction evaluates to __mpl_true__ if the type `T` is defined with a
`static` `den` member data variable, and if the type `ResultPlaceholderExpr`
evaluates to __mpl_true__ when passed in the result type of the `den` member
data as its argument type.  This metafunction evaluates to __mpl_false__
otherwise.
[endsect]

[section:type_requirements Type requirements]
The type `PlaceholderExpr` must be a unary __MPL_Lambda_Expression__ that can
take in the type of the `den` member data as its argument type and evaluate to
a type for which __bct_is_mpl_boolean_constant__ evaluates to __mpl_true__.
[endsect]

[section:default Default argument types]
[reference__has_den__fwd]
[endsect]

[section:definition Where defined]
``
#include <__has_den__header__>
``

--or--

``
#include <__concept_traits__header__>
``

Forward declaration:

``
#include <__member_data__header_fwd__>
``

--or--

``
#include <__concept_traits__header_fwd__>
``
[endsect]

[endsect] [/ has_den]

