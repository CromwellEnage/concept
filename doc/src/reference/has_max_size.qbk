[/=============================================================================
    Copyright (C) 2013-2015 Cromwell D. Enage

    Distributed under the Boost Software License, Version 1.0.
    (See accompanying file LICENSE_1_0.txt or copy at
    [@http://www.boost.org/LICENSE_1_0.txt])
=============================================================================/]

[section:has_max_size `has_max_size`]

[section Synopsis]
[reference__has_max_size]
[endsect]

[section Description]
This metafunction evaluates to __mpl_true__ if the type `T` is defined
with a zero-argument `max_size` member function definition, and if the type
`ResultPlaceholderExpr` evaluates to __mpl_true__ when passed in the result
type of the `max_size` member function as its first argument type and `T` as
its second argument type.  This metafunction evaluates to __mpl_false__
otherwise.
[endsect]

[section:type_requirements Type requirements]
The type `ResultPlaceholderExpr` must be an __MPL_Lambda_Expression__ that can
take in the result type of the `max_size` member function as its first argument
type, take in `T` as its second argument type, and evaluate to a type for which
__dst_is_mpl_boolean_constant__ evaluates to __mpl_true__.
[endsect]

[section:default Default argument types]
[reference__has_max_size__fwd]

If the type `ResultPlaceholderExpr` is not specified, then this metafunction
checks if the result type of the `max_size` member function is `T::size_type`.
[endsect]

[section:definition Where defined]
``
#include <__has_max_size__header__>
``

--or--

``
#include <__ds_traits__header__>
``

Forward declaration:

``
#include <__ds_traits_fwd__header__>
``
[endsect]

[endsect] [/ has_max_size]

