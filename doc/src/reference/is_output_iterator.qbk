[/=============================================================================
    Copyright (C) 2013-2015 Cromwell D. Enage

    Distributed under the Boost Software License, Version 1.0.
    (See accompanying file LICENSE_1_0.txt or copy at
    [@http://www.boost.org/LICENSE_1_0.txt])
=============================================================================/]

[section:is_output_iterator `is_output_iterator`]

[section Synopsis]
[reference__is_output_iterator]
[endsect]

[section Description]
This metafunction evaluates to __mpl_true__ if the specified type models the
__Output_Iterator__ concept.  This metafunction evaluates to __mpl_false__
otherwise.
[endsect]

[section:default Default argument types]
[reference__is_output_iterator__fwd]

If the type `Value` is not specified, it defaults to one of the following:

  # `T::char_type` if `T` is one of the C++-standard stream iterator types.
  # `T::container_type::value_type` if `T` is one of the C++-standard
    __Output_Iterator__ adaptor types.
  # [`_iterator_value_<T>::type] if `T` models the __Readable_Iterator__
    concept.
  # `T::value_type` if defined.
  # `void` otherwise.

In practice, applications that need __Output_Iterator__ models either also need
them as __Input_Iterator__ models or otherwise have specific value types to be
written into the iterator instances, so the last case should never be
encountered.
[endsect]

[section:definition Where defined]
``
#include <__is_output_iterator__header__>
``

--or--

``
#include <__ds_traits__header__>
``

Forward declaration:

``
#include <__ds_traits_fwd__header__>
``
[endsect]

[section Test]
See __is_output_iterator__test_source__.
[endsect]

[endsect] [/ is_output_iterator]

