[/=============================================================================
    Copyright (C) 2013-2015 Cromwell D. Enage

    Distributed under the Boost Software License, Version 1.0.
    (See accompanying file LICENSE_1_0.txt or copy at
    [@http://www.boost.org/LICENSE_1_0.txt])
=============================================================================/]

[section:is_indexable_iterator `is_indexable_iterator`]

[section Synopsis]
[reference__is_indexable_iterator]
[endsect]

[section Description]
This metafunction evaluates to __mpl_true__ if the specified type models either
the __Random_Access_Traversal_Iterator__ concept or the
__Random_Access_Iterator__ concept, with the exception of requiring constant
time complexity for operations that move an iterator instance to point at any
element.  (The __Random_Access_Traversal_Iterator__ concept does not
/explicitly/ specify this requirement, but one should reasonably infer it from
the /random access/ part of the concept name.)  This metafunction evaluates to
__mpl_false__ otherwise.
[endsect]

[section:definition Where defined]
``
#include <__is_indexable_iterator__header__>
``

--or--

``
#include <__ds_traits__header__>
``

Forward declaration:

``
#include <__ds_traits_fwd__header__>
``
[endsect]

[section Test]
See __is_indexable_iterator__test_source__.
[endsect]

[endsect] [/ is_indexable_iterator]

