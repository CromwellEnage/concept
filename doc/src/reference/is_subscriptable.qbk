[/=============================================================================
    Copyright (C) 2013-2016 Cromwell D. Enage

    Distributed under the Boost Software License, Version 1.0.
    (See accompanying file LICENSE_1_0.txt or copy at
    [@http://www.boost.org/LICENSE_1_0.txt])
=============================================================================/]

[section:is_subscriptable `is_subscriptable`]

[section Synopsis]
[reference__is_subscriptable]
[endsect]

[section Description]
This metafunction evaluates to __mpl_true__ if the type `T` defines the
subscript operator and if the type `ResultPlaceholderExpr` evaluates to
__mpl_true__ when it takes in the result type of the subscript expression as
its first argument type, `T` as its second argument type, and `Subscript` as
its third argument type.  This metafunction evaluates to __mpl_false__
otherwise.
[endsect]

[section:type_requirements Type requirements]
The type `ResultPlaceholderExpr` must be an __MPL_Lambda_Expression__ that
can take in the result type of the subscript expression as its first argument
type, take in `T` as its second argument type, take in `Subscript` as its third
argument type, and evaluate to a type for which __bct_is_mpl_boolean_constant__
evaluates to __mpl_true__.
[endsect]

[section:definition Where defined]
``
#include <__is_subscriptable__header__>
``

--or--

``
#include <__concept_traits__header__>
``

Forward declaration:

``
#include <__concept_traits_fwd__header__>
``
[endsect]

[endsect] [/ is_subscriptable]

